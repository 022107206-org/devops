"""
Django settings for devops project.

Generated by 'django-admin startproject' using Django 2.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import sys

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# app统一放到apps目录，方便管理
sys.path.insert(0, os.path.join(BASE_DIR, 'apps'))

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
if not os.path.isdir(MEDIA_ROOT):
    os.makedirs(MEDIA_ROOT)
MEDIA_URL = '/media/'

RECORD_DIR = 'record'   # 存放终端结果文件
RECORD_ROOT = os.path.join(MEDIA_ROOT, RECORD_DIR)
if not os.path.isdir(RECORD_ROOT):
    os.makedirs(RECORD_ROOT)

SCRIPT_DIR = 'script'   # 存放脚本
SCRIPT_ROOT = os.path.join(MEDIA_ROOT, SCRIPT_DIR)
if not os.path.isdir(SCRIPT_ROOT):
    os.makedirs(SCRIPT_ROOT)

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)

TMP_DIR = 'tmp'
TMP_ROOT = os.path.join(MEDIA_ROOT, TMP_DIR)
if not os.path.isdir(TMP_ROOT):
    os.makedirs(TMP_ROOT)

FILE_UPLOAD_MAX_MEMORY_SIZE = 27262976    # 上传的文件保存在内存中的大小限制  26MB
DATA_UPLOAD_MAX_MEMORY_SIZE = 27262976    # 上传的数据保存在内存中的大小限制  26MB

FILE_UPLOAD_TEMP_DIR = os.path.join(MEDIA_ROOT, 'tmp')       # 上传的文件大于FILE_UPLOAD_MAX_MEMORY_SIZE时临时保存目录

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'jp9kd-^-)93ke1^4i6)sd^+kovh2)197m83+^q+o_6^+dz^3xb'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

# Application definition

INSTALLED_APPS = [
    # 'simpleui',
    # 'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'channels',
    'server',
    'user',
    'webssh',
    'webtelnet',
    'webguacamole',
    'tasks',
    'batch',
]

MIDDLEWARE = [
    # 'debug_toolbar.middleware.DebugToolbarMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'util.middleware.NewNextMiddleware',
    'util.middleware.GetRealClientMiddleware',  # 前端有代理，获取真实 IP
    'util.middleware.BlackListMiddleware',  # IP 黑名单
    'util.middleware.LockScreenMiddleware',     # 锁屏
    'util.middleware.DebugMiddleware',      # 管理员显示 DEBUG 页面
]

FILE_UPLOAD_HANDLERS = [
    # 'django.core.files.uploadhandler.MemoryFileUploadHandler',
    'django.core.files.uploadhandler.TemporaryFileUploadHandler',
]


# 添加 websocket 支持
ASGI_APPLICATION = 'devops.routing.application'

ROOT_URLCONF = 'devops.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'devops.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

DATABASES_mysql = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'devops',
        'USER': 'devops',
        'PASSWORD': 'devops',
        'HOST': '192.168.223.111',
        'PORT': '3306',
        'OPTIONS': {
            # 'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
            'init_command': "SET sql_mode=''",
         },
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False


STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]

# simpleui 使用本地css和js
# SIMPLEUI_STATIC_OFFLINE = True

# session 如果在此期间未做任何操作，则退出， django 本身要么设置固定时间，要么关闭浏览器失效
CUSTOM_SESSION_EXIPRY_TIME = 60 * 120    # 30 分钟

# 终端过期时间，最好小于等于 CUSTOM_SESSION_EXIPRY_TIME
CUSTOM_TERMINAL_EXIPRY_TIME = 60 * 120

redis_setting = {
    'host': '192.168.223.111',
    'port': 6379,
}

# celery 配置 redis
CELERY_BROKER_URL = 'redis://{0}:{1}/0'.format(redis_setting['host'], redis_setting['port'])

# channel_layers 使用 redis
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [(redis_setting['host'], redis_setting['port'])],
        },
    },
}

# 缓存使用 redis
CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': 'redis://{0}:{1}'.format(redis_setting['host'], redis_setting['port']),
        'OPTIONS': {
            # 'DB': 10,
            # 'PASSWORD': '123456',
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
            'PARSER_CLASS': 'redis.connection.HiredisParser',
            'CONNECTION_POOL_CLASS': 'redis.BlockingConnectionPool',
            'CONNECTION_POOL_CLASS_KWARGS': {
                'max_connections': 500,
                'timeout': 15,
            },
            "COMPRESSOR": "django_redis.compressors.zlib.ZlibCompressor",   # 开启压缩
        },
        'KEY_PREFIX': 'devops',
    }
}

SESSION_ENGINE = "django.contrib.sessions.backends.cached_db"
SESSION_COOKIE_HTTPONLY = True


# proxy_sshd 配置
PROXY_SSHD = {
    'listen_host': '0.0.0.0',
    'listen_port': 2222,
    'cons': 500,
}

# guacd 配置
GUACD = {
    'host': '192.168.223.111',
    'port': 4822,
    'timeout': 15,
}

# 访问黑名单， 需开启 Middleware：util.middleware.BlackListMiddleware
BLACKLIST = ['192.168.223.220', '192.168.223.221']
