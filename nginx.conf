# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

# base on nginx 1.12.2

user nginx;
worker_processes 4;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
    accept_mutex on;
    use epoll;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" $remote_addr $server_port';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;
    server_tokens  off;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    # Settings for a TLS enabled server.
	server {
		listen 80 default_server;
		listen [::]:80 default_server;
		server_name www.leffss.com;
		return 307 https://$host$request_uri;
	}

    upstream wsgi-backend {
	    ip_hash;
        server 127.0.0.1:8000 max_fails=3 fail_timeout=0;
    }

    upstream asgi-backend {
	    ip_hash;
        server 127.0.0.1:8001 max_fails=3 fail_timeout=0;
    }

    server {
        listen       443 ssl http2 default_server;
        listen       [::]:443 ssl http2 default_server;
        server_name  www.leffss.com;

        ssl_certificate "/etc/nginx/server.crt";
        ssl_certificate_key "/etc/nginx/server.key";
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout  10m;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
	    client_max_body_size 30m;
	    keepalive_timeout 5;
	
	    # HSTS 31536000 one year
	    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        
	    # Load configuration files for the default server block.
        # include /etc/nginx/default.d/*.conf;
	    # location /static/ {
        #	alias /home/workspace/devops/static/;
        #	expires 1h;
    	# }

	    # location /media/ {
        #	alias /home/workspace/devops/media/;
        #	expires 1h;
    	# }

	    location ~ ^/(media|static)/ {
        	root /home/workspace/devops/;
        	expires 30d;
    	}

        location /ws/ {
            try_files $uri @proxy_to_ws;
        }

        location @proxy_to_ws {
		    proxy_pass http://asgi-backend;
        	proxy_http_version 1.1;
        	proxy_set_header Upgrade $http_upgrade;
        	proxy_set_header Connection "upgrade";
        	proxy_redirect off;
        	proxy_set_header Host $host;
        	proxy_set_header X-Real-IP $remote_addr;
        	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        	proxy_set_header X-Forwarded-Proto $scheme;
        	proxy_set_header X-Forwarded-Port $server_port;
        	proxy_set_header X-Forwarded-Host $server_name;
        	proxy_intercept_errors on; #获取后端错误码并处理
        }

        location / {
            try_files $uri @proxy_to_app;
        }

        location @proxy_to_app {
		    proxy_pass http://wsgi-backend;
        	proxy_http_version 1.1;
        	proxy_redirect off;
        	proxy_set_header Host $host;
        	proxy_set_header X-Real-IP $remote_addr;
        	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        	proxy_set_header X-Forwarded-Proto $scheme;
        	proxy_set_header X-Forwarded-Port $server_port;
        	proxy_set_header X-Forwarded-Host $server_name;
        	proxy_intercept_errors on; #获取后端错误码并处理
        }

        error_page 404 /404.html;
        location = /404.html {
            root   /usr/share/nginx/html;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }

}

